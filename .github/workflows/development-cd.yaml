# Package and deploy docker image
name: dev deploy dockerimage

on:
  push:
    branches:    
      - 'development'

jobs:
  dockerimagereleaser:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    # this is a simple way of using date and time to do versioning.
    - name: Modify scripts and get version
      id: version
      run: echo ::set-output name=date_version::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

    - name: Show short sha
      id: sha
      run: echo ::set-output name=short_sha::$(echo ${GITHUB_SHA::8})

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        registry: docker.io
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: ./
        file: ./docker/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          docker.io/seanmcguigan/poker:development-${{steps.sha.outputs.short_sha}}-${{steps.version.outputs.date_version}}
    
    - name: Run tests in the development environment
      run: echo "Running integration tests"




















      # - name: install svu
      #   run: |
      #     echo 'deb [trusted=yes] https://apt.fury.io/caarlos0/ /' | sudo tee /etc/apt/sources.list.d/caarlos0.list
      #     sudo apt update
      #     sudo apt install svu
      
      # # check if we need to bump tags
      # - name: check for release
      #   run: |
      #     if [ $(svu next) == $(svu current) ]; then
      #       echo "tag match - skip release" &&  echo "do-release=false" >> $GITHUB_ENV
      #     else
      #       echo "tag mismatch - tagging for new release" &&  echo "do-release=true" >> $GITHUB_ENV
      #     fi
      
      # - name: Tag new version
      #   if: ${{ env.do-release == 'true' }}
      #   run: |
      #     git tag $(svu next)
      #     git push --tags