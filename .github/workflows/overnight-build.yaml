name: "Overnight build"

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  short_sha:
    outputs: 
      current_short_sha: ${{ steps.short_sha.outputs.short_sha }}
      current_prod_tag: ${{ steps.prod_tag.outputs.prod_tag }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: get last commit sha
        id: short_sha
        run: |
          short_sha=$(git rev-parse --short ${{ github.sha }})
          echo "short_sha=$short_sha" >> $GITHUB_OUTPUT

      - name: get last prod tag
        id: prod_tag
        run: |
          prod_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "prod_tag=$prod_tag" >> $GITHUB_OUTPUT

      - name: echo
        run: | 
          echo "Output ${{ steps.short_sha.outputs.short_sha }}"
          echo "Output ${{ steps.prod_tag.outputs.prod_tag }}"
  
  # draft_release:
  #   needs: short_sha
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3

  #     - name: env
  #       run: |
  #         echo "The recorded short commit sha ${{ needs.short_sha.outputs.current_short_sha }}"
  #         echo "The current prod release tag ${{ needs.short_sha.outputs.current_prod_tag }}"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: short_sha
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: env
        run: |
          echo "The recorded short commit sha ${{ needs.short_sha.outputs.current_short_sha }}"
          echo "The current prod release tag ${{ needs.short_sha.outputs.current_prod_tag }}"

      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      
      - name: calculate next version
        id: version
        uses: patrickjahns/version-drafter-action@v1
        # with:
          # (Optional) specify config name to use, relative to .github/. Default: version-drafter.yml
          # config-name: my-config.yml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: echo calculated version
        run: |
          echo "version: ${{ steps.version.outputs.next-version }}"
