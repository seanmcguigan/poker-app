name: "Overnight build"

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  short_sha:
    outputs: 
      current_short_sha: ${{ steps.short_sha.outputs.short_sha }}
      current_prod_tag: ${{ steps.prod_tag.outputs.prod_tag }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      - name: get last commit sha
        id: short_sha
        run: |
          short_sha=$(git rev-parse --short ${{ github.sha }})
          echo "short_sha=$short_sha" >> $GITHUB_OUTPUT

      - name: get last prod tag
        id: prod_tag
        run: |
          prod_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "prod_tag=$prod_tag" >> $GITHUB_OUTPUT

      - name: echo
        run: | 
          echo "Output ${{ steps.short_sha.outputs.short_sha }}"
          echo "Output ${{ steps.prod_tag.outputs.prod_tag }}"
  
  # draft_release:
  #   needs: short_sha
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: checkout
  #       uses: actions/checkout@v3

  #     - name: env
  #       run: |
  #         echo "The recorded short commit sha ${{ needs.short_sha.outputs.current_short_sha }}"
  #         echo "The current prod release tag ${{ needs.short_sha.outputs.current_prod_tag }}"
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: short_sha
    name: Release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: env
        run: |
          echo "The recorded short commit sha ${{ needs.short_sha.outputs.current_short_sha }}"
          echo "The current prod release tag ${{ needs.short_sha.outputs.current_prod_tag }}"

      - name: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"

      # create tag for new release - pre-prod-xxx
      # - name: create tag for new release

      # Create a release draft      
      - name: create draft
        run: |
          gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
          /repos/seanmcguigan/poker-app/releases \
          -f tag_name='v0.2.1' \
          -f target_commitish='main' \
          -f name='v0.2.1' \
          -f body="Changes https://github.com/seanmcguigan/poker-app/compare/${{ needs.short_sha.outputs.current_short_sha }}...${{ needs.short_sha.outputs.current_prod_tag }}" \
          -F draft=true \
          -F prerelease=false \
          -F generate_release_notes=true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Generate release notes content for a release
      # - name: create-draft
      #   run: |
      #     gh api --method POST -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" \
      #     /repos/seanmcguigan/poker-app/releases \
      #     -f tag_name='v1.2.3' \
      #     -f target_commitish='main' \
      #     -f name='skeleton app' \
      #     -f body='Description of the release' \
      #     -F draft=true \
      #     -F prerelease=false \
      #     -F generate_release_notes=true
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

